<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.website.dao.BlogTimelineMapper" >
  <resultMap id="BaseResultMap" type="com.myblog.website.entity.BlogTimeline" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="event_name" property="eventName" jdbcType="VARCHAR" />
    <result column="event_content" property="eventContent" jdbcType="VARCHAR" />
    <result column="event_date" property="eventDate" jdbcType="DATE" />
    <result column="event_time" property="eventTime" jdbcType="TIME" />
    <result column="user" property="user" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, event_name, event_content, event_date, event_time, user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.myblog.website.entity.BlogTimelineExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectLimitByExample" resultMap="BaseResultMap" parameterType="com.myblog.website.entity.BlogTimelineExample">
    select
    <include refid="Base_Column_List"/>
    from blog_timeline
    order by ${orderByClause} desc , event_time desc
    limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}

  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from blog_timeline
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_timeline
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.myblog.website.entity.BlogTimelineExample" >
    delete from blog_timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myblog.website.entity.BlogTimeline" >
    insert into blog_timeline (id, event_name, event_content,
      event_date, event_time, user)
    values (#{id,jdbcType=INTEGER}, #{eventName,jdbcType=VARCHAR}, #{eventContent,jdbcType=VARCHAR},
      #{eventDate,jdbcType=DATE}, #{eventTime,jdbcType=TIME}, #{user,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myblog.website.entity.BlogTimeline" >
    insert into blog_timeline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eventName != null" >
        event_name,
      </if>
      <if test="eventContent != null" >
        event_content,
      </if>
      <if test="eventDate != null" >
        event_date,
      </if>
      <if test="eventTime != null" >
        event_time,
      </if>
      <if test="user != null" >
        user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eventName != null" >
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventContent != null" >
        #{eventContent,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        #{eventDate,jdbcType=DATE},
      </if>
      <if test="eventTime != null" >
        #{eventTime,jdbcType=TIME},
      </if>
      <if test="user != null" >
        #{user,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myblog.website.entity.BlogTimelineExample" resultType="java.lang.Integer" >
    select count(*) from blog_timeline
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_timeline
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventName != null" >
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.eventContent != null" >
        event_content = #{record.eventContent,jdbcType=VARCHAR},
      </if>
      <if test="record.eventDate != null" >
        event_date = #{record.eventDate,jdbcType=DATE},
      </if>
      <if test="record.eventTime != null" >
        event_time = #{record.eventTime,jdbcType=TIME},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_timeline
    set id = #{record.id,jdbcType=INTEGER},
    event_name = #{record.eventName,jdbcType=VARCHAR},
    event_content = #{record.eventContent,jdbcType=VARCHAR},
    event_date = #{record.eventDate,jdbcType=DATE},
    event_time = #{record.eventTime,jdbcType=TIME},
    user = #{record.user,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myblog.website.entity.BlogTimeline" >
    update blog_timeline
    <set >
      <if test="eventName != null" >
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="eventContent != null" >
        event_content = #{eventContent,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null" >
        event_date = #{eventDate,jdbcType=DATE},
      </if>
      <if test="eventTime != null" >
        event_time = #{eventTime,jdbcType=TIME},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myblog.website.entity.BlogTimeline" >
    update blog_timeline
    set event_name = #{eventName,jdbcType=VARCHAR},
      event_content = #{eventContent,jdbcType=VARCHAR},
      event_date = #{eventDate,jdbcType=DATE},
      event_time = #{eventTime,jdbcType=TIME},
      user = #{user,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>